install.packages('Rselenium')
install.packages('KoNLP')
install.packages('rJava')
install.packages('NIADic')
library(httr)
library(dplyr)
library(rvest)
library(Rselenium)
library(data.table)
library(stringr)
library(wordcloud)
library(rJava)
library(RColorBrewer)
library(KoNLP)
useNIADic()



#반달커피

install.packages("rvest")
library(rvest)
crawl_result =""
for(i in 1:30) {
  
  url <- paste0("https://search.naver.com/search.naver?date_from=&date_option=0&date_to=&dup_remove=1&nso=&post_blogurl=&post_blogurl_without=&query=%EC%9A%A9%EC%9D%B8%EB%B0%98%EB%8B%AC%EC%BB%A4%ED%94%BC&sm=tab_pge&srchby=all&st=sim&where=post&start=", i)
  
  read_html <- read_html(url)
  
  crawl_node <- html_nodes(read_html,   
                           
                           "a.sh_blog_title._sp_each_url._sp_each_title")
  
  crawl_text <- html_text(crawl_node)
  
  if(i %% 10 == 1){
    
    crawl_result <- c(crawl_result, crawl_text)
    
    print(url)
    
  }
  
  i <- i + 10
  
}

crawl_result


class(crawl_result)
length(crawl_result)
mode(crawl_result)
View(crawl_result)
install.packages(stringr)
library(stringr)


#특수문자 지우기
crawl_result <-str_replace_all(crawl_result, "\\W", " ")
View(crawl_result)

#명사 추출
noun <-extractNoun(crawl_result)
wordcount <-table(unlist(noun))
df_word <- as.data.frame(wordcount, stringAsFactors = F)
df_word <- rename(df_word, word =Var1, freq=Freq)
View(df_word)

top_10 <-df_word %>%
  arrange(desc(freq)) %>%
  head(10)
top_10


library(wordcloud)
library(RColorBrewer)
pal <- brewer.pal(8,"Dark2")
set.seed(1234)
wordcloud(words=df_word$word,
          freq=df_word$freq,
          min.freq=2,
          max.words=200,
          random.order=F,
          rot.per=.1,
          scale = c(4,0.3),
          colors=pal)

pal <- brewer.pal(9, "Blues")[5:9]
set.seed(1234)
wordcloud(words=df_word$word,
          freq=df_word$freq,
          min.freq=2,
          max.words=200,
          random.order=F,
          rot.per=.1,
          scale=c(4,0.3),
          colors=pal)
